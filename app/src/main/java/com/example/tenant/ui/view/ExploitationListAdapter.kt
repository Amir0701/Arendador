package com.example.tenant.ui.view

import android.app.AlertDialog
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import androidx.recyclerview.widget.AsyncListDiffer
import androidx.recyclerview.widget.DiffUtil
import androidx.recyclerview.widget.RecyclerView
import com.example.tenant.R
import com.example.tenant.data.model.Exploitation
import java.text.SimpleDateFormat
import java.util.*

class ExploitationListAdapter: RecyclerView.Adapter<ExploitationListAdapter.ExploitationViewHolder>() {
    private val differ = object : DiffUtil.ItemCallback<Exploitation>(){
        override fun areItemsTheSame(oldItem: Exploitation, newItem: Exploitation): Boolean {
            return oldItem.id == newItem.id
        }

        override fun areContentsTheSame(oldItem: Exploitation, newItem: Exploitation): Boolean {
            return oldItem == newItem
        }
    }

    val exploitationList = AsyncListDiffer(this, differ)

    class ExploitationViewHolder(itemView: View): RecyclerView.ViewHolder(itemView){
        val nameTextView: TextView = itemView.findViewById(R.id.exploitationName)
        val dateOfStartTextView: TextView = itemView.findViewById(R.id.exploitationDateOfStart)
        val exploitationImage: ImageView = itemView.findViewById(R.id.exploitationInfo)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ExploitationViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.exploitation_item, parent, false)
        return ExploitationViewHolder(view)
    }

    override fun onBindViewHolder(holder: ExploitationViewHolder, position: Int) {
        val exploitation = exploitationList.currentList[position]
        holder.nameTextView.text = exploitation.name
        val formatDate = reformat(exploitation.dateOfStart)
        holder.dateOfStartTextView.text = "Начало эксплуатации: $formatDate"

        holder.itemView.setOnClickListener {
            onItemClickListener?.onItemClick(exploitation)
        }

        holder.exploitationImage.setOnClickListener {
            val alertDialog = AlertDialog.Builder(holder.itemView.context)
                .setTitle(exploitation.name)
                .setMessage("Дата начало: $formatDate \n" +
                        "Дата окончания: ${reformat(exploitation.dateOfEnd)} \n" +
                        "Сумма: ${exploitation.sum} \n" +
                        "Статья расходов: ${exploitation.stateZatrat ?: "нет"}")
                .setPositiveButton("OK") { p0, p1 ->
                    p0?.cancel()
                }.create()

            alertDialog.show()
        }
    }

    override fun getItemCount(): Int {
        return exploitationList.currentList.size
    }

    interface OnItemClickListener{
        fun onItemClick(exploitation: Exploitation)
    }

    private var onItemClickListener: OnItemClickListener? = null

    fun setOnItemClickListener(onItemClickListener: OnItemClickListener){
        this.onItemClickListener = onItemClickListener
    }

    private fun reformat(date: Date?): String{
        val format = "dd.MM.yyyy"
        val simpleDateFormat = SimpleDateFormat(format, Locale.ENGLISH)
        var formatDate = ""
        formatDate = date?.let {
            simpleDateFormat.format(it)
        }.toString()

        return formatDate
    }
}