package com.example.tenant.ui.view

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import androidx.lifecycle.ViewModelProvider
import com.example.tenant.App
import com.example.tenant.R
import com.example.tenant.data.repository.ExploitationRepository
import com.example.tenant.data.repository.ObjectRepository
import com.example.tenant.ioc.component.NewExploitationActivityComponent
import com.example.tenant.ui.model.NewExploitationActivityViewModel
import com.example.tenant.ui.model.NewExploitationActivityViewModelFactory
import javax.inject.Inject

class NewExploitationActivity : AppCompatActivity() {
    lateinit var newExploitationActivityViewModel: NewExploitationActivityViewModel
    var id: Int? = null

    @Inject
    lateinit var exploitationRepository: ExploitationRepository
    lateinit var newExploitationActivityComponent: NewExploitationActivityComponent

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_new_exploitation)
        newExploitationActivityComponent = (application as App).appComponent.getNewExploitationActivityComponent()
        newExploitationActivityComponent.inject(this)
        val factory = NewExploitationActivityViewModelFactory((application as App),
            exploitationRepository
        )
        id = intent.extras?.getInt("obj_id")
        newExploitationActivityViewModel = ViewModelProvider(this, factory)[NewExploitationActivityViewModel::class.java]
    }
}